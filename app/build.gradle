apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'

Properties properties = new Properties()
if (rootProject.file("project.properties").exists()) {
    properties.load(rootProject.file("project.properties").newDataInputStream())
} else {
    properties.load(rootProject.file("project-sample.properties").newDataInputStream())
}

Properties secrets = new Properties()
if (rootProject.file("secrets.properties").exists()) {
    secrets.load(rootProject.file("secrets.properties").newDataInputStream())
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "edu.gvsu.art.gallery"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 1009
        versionName "2023.10.1009"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "ART_GALLERY_BASE_URL", properties['art_gallery_base_url'])
        buildConfigField("String", "APPLICATION_NAME", properties['application_name'])
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose_compiler_version"
    }
    signingConfigs {
        release {
            storeFile file("${project.rootDir}/release.keystore")
            storePassword secrets['store_password']
            keyAlias secrets['key_alias']
            keyPassword secrets['store_password']
        }
        debug {
            storeFile file("${project.rootDir}/debug.keystore")
        }
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'art-gvsu-proguard.txt'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            testCoverageEnabled true
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/services/javax.annotation.processing.Processor']
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lint {
        abortOnError false
        disable 'InvalidPackage'
    }
    namespace 'edu.gvsu.art.gallery'
}

dependencies {
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
    implementation 'androidx.camera:camera-view:1.0.0-alpha23'
    implementation 'androidx.camera:camera-lifecycle:1.1.0-alpha03'
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.compiler:compiler:1.5.3"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.material:material"
    implementation 'com.google.android.material:material:1.10.0'
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-util"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.navigation:navigation-compose:2.6.0"
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'
    implementation "com.github.Tlaster:Swiper:0.7.1"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-okhttp:$exoplayer_version"
    implementation "com.squareup.sqldelight:android-driver:1.5.3"
    implementation "io.coil-kt:coil-compose:1.4.0"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation 'com.google.android.gms:play-services-analytics:18.0.4'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation platform('com.google.firebase:firebase-bom:32.2.2')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.maps.android:android-maps-utils:2.2.3'
    implementation 'com.google.maps.android:maps-ktx:3.2.1'
    implementation 'com.google.maps.android:maps-utils-ktx:3.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':artgalleryclient')

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-core:3.6.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.mockito:mockito-core:3.6.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.5.4'
}

repositories {
    mavenCentral()
    google()
}

tasks.register('useGoogleServicesDebugFile') {
    description 'Copies the debug google-services.json file if file is missing.'
    doLast {
        def googleServicesFile = "google-services.json"
        if (!file("${project.projectDir}/$googleServicesFile").exists()) {
            def debugOnlyFile = "google-services-debug-only.json"
            println "$googleServicesFile file is missing. Copying $debugOnlyFile"
            copy {
                from "${project.projectDir}/$debugOnlyFile"
                into project.projectDir
                rename { googleServicesFile }
            }
        }
    }
}

preBuild.dependsOn(useGoogleServicesDebugFile)
